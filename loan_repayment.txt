You're working for a large financial institution that provides various types of loans to customers. 
Your task is to analyze loan repayment data to assess credit risk and improve risk management strategies.
Write an SQL to create 2 flags for each loan as per below rules. Display loan id, loan amount , due date and the 2 flags.
 
1- fully_paid_flag: 1 if the loan was fully repaid irrespective of payment date else it should be 0.
2- on_time_flag : 1 if the loan was fully repaid on or before due date else 0.


CREATE TABLE loans (
	loan_id INT,
	customer_id INT,
	loan_amount INT,
	due_date DATE
)

INSERT INTO loans VALUES 
(1, 1, 5000, '2023-01-15'),
(2, 2, 8000, '2023-02-20'),
(3, 3, 10000, '2023-03-10'),
(4, 4, 6000, '2023-04-05'),
(5, 5, 7000, '2023-05-01')


CREATE TABLE payments (
	payment_id INT,
	loan_id INT,
	payment_date DATE,
	amount_paid INT
)

INSERT INTO payments VALUES
(1, 1, '2023-01-10', 2000),
(2, 1, '2023-02-10', 1500),
(3, 2, '2023-02-20', 8000),
(4, 3, '2023-04-20', 5000),
(5, 4, '2023-03-15', 2000),
(6, 4, '2023-04-02', 4000),
(7, 5, '2023-04-02', 4000),
(8, 5, '2023-05-02', 3000)


Output

loan_id	loan_amount	due_date	fully_paid_flag		on_time_flag
1		5000		2023-01-15	0					0
2		8000		2023-02-20	1					1
3		10000		2023-03-10	0					0
4		6000		2023-04-05	1					0
5		7000		2023-05-01	1					1


Solution

WITH cte1 AS 
(
SELECT 
	l.loan_id, l.loan_amount, l.due_date,
	SUM(amount_paid) AS total_amount,
	MAX(payment_date) AS last_payment_date
FROM payments p
JOIN loans l ON p.loan_id = l.loan_id
GROUP BY l.loan_id, l.loan_amount, l.due_date
)
SELECT 
	loan_id,loan_amount, due_date,
	CASE WHEN loan_amount = total_amount THEN 1 ELSE 0 END AS fully_paid_flag,
	CASE WHEN loan_amount = total_amount AND due_date <= last_payment_date THEN 1 ELSE 0 END AS on_time_flag
FROM cte1