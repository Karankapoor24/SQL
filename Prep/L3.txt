/*

You are analyzing a social network dataset at Google. Your task is to find mutual friends between two users, Karl and Hans. 
There is only one user named Karl and one named Hans in the dataset.

The output should contain 'user_id' and 'user_name' columns.

users

user_id	user_name
1		Karl
2		Hans
3		Emma
4		Emma
5		Mike
6		Lucas
7		Sarah
8		Lucas
9		Anna
10		John


friends

user_id	friend_id
1		3
1		5
2		3
2		4
3		1
3		2
3		6
4		7
5		8
6		9
7		10
8		6
9		10
10		7
10		9


Output

user_id	user_name
3		Emma

*/

CREATE TABLE users(user_id INT, user_name varchar(30));
INSERT INTO users VALUES (1, 'Karl'), (2, 'Hans'), (3, 'Emma'), (4, 'Emma'), (5, 'Mike'), (6, 'Lucas'), (7, 'Sarah'), (8, 'Lucas'), (9, 'Anna'), (10, 'John');

CREATE TABLE friends(user_id INT, friend_id INT);
INSERT INTO friends VALUES (1,3),(1,5),(2,3),(2,4),(3,1),(3,2),(3,6),(4,7),(5,8),(6,9),(7,10),(8,6),(9,10),(10,7),(10,9);


with karl_friends AS (
SELECT
	u.user_id, f.friend_id
FROM users u 
INNER JOIN friends f 
ON u.user_id = f.user_id
WHERE u.user_name = 'Karl'
), hans_friends AS(
SELECT
	u.user_id, f.friend_id
FROM users u 
INNER JOIN friends f 
ON u.user_id = f.user_id
WHERE u.user_name = 'Hans'
)
SELECT
	k.friend_id AS user_id, u.user_name
FROM karl_friends k
INNER JOIN hans_friends h
ON k.friend_id = h.friend_id
INNER JOIN users u
ON k.friend_id = u.user_id