-- AB
-- Write aquery to find customers retained and a query to find churned customers each month.

Input
order_id	cust_id	order_date	amount
1		1	2020-01-15	150
2		1	2020-02-10	150
3		2	2020-01-16	150
4		2	2020-02-25	150
5		3	2020-01-10	150
6		3	2020-02-20	150
7		4	2020-01-20	150
8		5	2020-02-20	150

Output
month_date	retention_customer
1		0
2		3


create table transactions(
order_id int,
cust_id int,
order_date date,
amount int
);
delete from transactions;
insert into transactions values 
(1,1,'2020-01-15',150)
,(2,1,'2020-02-10',150)
,(3,2,'2020-01-16',150)
,(4,2,'2020-02-25',150)
,(5,3,'2020-01-10',150)
,(6,3,'2020-02-20',150)
,(7,4,'2020-01-20',150)
,(8,5,'2020-02-20',150)
;


Solution

Retention Query 1
SELECT 
	MONTH(this_month.order_date) AS mon,
	COUNT(DISTINCT last_month.cust_id) AS cust_retention
FROM transactions this_month
LEFT JOIN transactions last_month
ON this_month.cust_id=last_month.cust_id
AND DATEDIFF(MONTH,last_month.order_date,this_month.order_date) = 1
GROUP BY MONTH(this_month.order_date)
;

Retention Query 2
WITH cte1 AS (
SELECT 
	*, 
	LAG(order_date) OVER(PARTITION BY cust_id ORDER BY order_date) AS prev_date
FROM transactions
)
SELECT 
	MONTH(order_date),
	SUM(CASE WHEN MONTH(order_date)-MONTH(prev_date) = 1 THEN 1 ELSE 0 END) 
FROM cte1
GROUP BY MONTH(order_date);


Churn Query 1
SELECT 
	MONTH(last_month.order_date) AS mon,
	COUNT(DISTINCT last_month.cust_id) AS cust_churn
FROM transactions last_month
LEFT JOIN transactions this_month
ON this_month.cust_id=last_month.cust_id
AND DATEDIFF(MONTH,last_month.order_date,this_month.order_date) = 1
WHERE this_month.cust_id IS NULL
GROUP BY MONTH(last_month.order_date)
;

Churn Query 2
WITH cte1 AS (
SELECT 
	*, 
	LEAD(order_date) OVER(PARTITION BY cust_id ORDER BY order_date) AS next_order
FROM transactions
)
SELECT 
	MONTH(order_date),
	SUM(CASE WHEN next_order IS NULL THEN 1 ELSE 0 END) 
FROM cte1
GROUP BY MONTH(order_date);