You are a data analyst working for an e-commerce company, responsible for analysing customer orders to gain insights into their purchasing behaviour. 
Your task is to write a SQL query to retrieve the details of the penultimate order for each customer. 
However, if a customer has placed only one order, you need to retrieve the details of that order instead, 
display the output in ascending order of customer name.


CREATE TABLE p_order (
	order_id INT,
	order_date DATE,
	customer_name VARCHAR(20),
	product_name VARCHAR(20),
	sales INT
);

INSERT INTO p_order VALUES 
(1, '2023-01-01', 'Alexa', 'iphone', 100),
(2, '2023-01-02', 'Alexa', 'boAt', 300),
(3, '2023-01-03', 'Alexa', 'Rolex', 400),
(4, '2023-01-01', 'Ramesh', 'Titan',  200),
(5, '2023-01-02', 'Ramesh', 'Shirt', 300),
(6, '2023-01-03', 'Neha', 'Dress', 100)


Output

order_id	order_date		customer_name	product_name	sales
2			2023-01-02		Alexa			boAt			300
6			2023-01-03		Neha			Dress			100
4			2023-01-01		Ramesh			Titan			200


Solution

WITH cte1 AS (
SELECT 
	*,
	DENSE_RANK() OVER(PARTITION BY customer_name ORDER BY order_date DESC) AS rn,
	COUNT(customer_name) OVER(PARTITION BY customer_name) AS cnt
FROM p_order
)
SELECT
	order_id, order_date, customer_name, product_name, sales
FROM cte1
WHERE rn=2 OR (cnt=1 AND rn=1)
ORDER BY customer_name
;