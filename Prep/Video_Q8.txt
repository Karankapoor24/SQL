In the given input table, there are rows with missing JOB_ROLE values. Write a query to fill in those blank fields with appropriate values.
Assume row_id is always in sequence and job_role field is populated only for the first skill.
Provide two different solutions to the problem.


drop table if exists job_skills;
create table job_skills
(
	row_id		int,
	job_role	varchar(20),
	skills		varchar(20)
);
insert into job_skills values (1, 'Data Engineer', 'SQL');
insert into job_skills values (2, null, 'Python');
insert into job_skills values (3, null, 'AWS');
insert into job_skills values (4, null, 'Snowflake');
insert into job_skills values (5, null, 'Apache Spark');
insert into job_skills values (6, 'Web Developer', 'Java');
insert into job_skills values (7, null, 'HTML');
insert into job_skills values (8, null, 'CSS');
insert into job_skills values (9, 'Data Scientist', 'Python');
insert into job_skills values (10, null, 'Machine Learning');
insert into job_skills values (11, null, 'Deep Learning');
insert into job_skills values (12, null, 'Tableau');

select * from job_skills


Input

row_id	job_role		skills
1		Data Engineer	SQL
2		NULL			Python
3		NULL			AWS
4		NULL			Snowflake
5		NULL			Apache Spark
6		Web Developer	Java
7		NULL			HTML
8		NULL			CSS
9		Data Scientist	Python
10		NULL			Machine Learning
11		NULL			Deep Learning
12		NULL			Tableau


Output

row_id	job_role		skills
1		Data Engineer	SQL
2		Data Engineer	Python
3		Data Engineer	AWS
4		Data Engineer	Snowflake
5		Data Engineer	Apache Spark
6		Web Developer	Java
7		Web Developer	HTML
8		Web Developer	CSS
9		Data Scientist	Python
10		Data Scientist	Machine Learning
11		Data Scientist	Deep Learning
12		Data Scientist	Tableau


Solution 1

WITH cte AS (
SELECT 
	*,
	SUM(CASE WHEN job_role is NOT NULL THEN 1 ELSE 0 END) OVER(ORDER BY row_id) AS segment
FROM job_skills
)
SELECT 
	row_id,
	FIRST_VALUE(job_role) OVER(PARTITION BY segment ORDER BY row_id) AS job_role,
	skills
FROM cte
;


Solution 2

WITH cte AS (
SELECT 
	row_id, job_role, skills
FROM job_skills
WHERE row_id=1
UNION ALL
SELECT
	js.row_id, 
	COALESCE(js.job_role, cte.job_role) AS job_role,
	js.skills
FROM cte
INNER JOIN job_skills js
ON js.row_id = cte.row_id+1
)
SELECT * FROM cte
