--- VIDEO_Q1 ---

/* Problem Statement:
- For pairs of brands in the same year (e.g. apple/samsung/2020 and samsung/apple/2020) 
    - if custom1 = custom3 and custom2 = custom4 : then keep only one pair

- For pairs of brands in the same year 
    - if custom1 != custom3 OR custom2 != custom4 : then keep both pairs

- For brands that do not have pairs in the same year : keep those rows as well
*/


DROP TABLE IF EXISTS brands;
CREATE TABLE brands 
(
    brand1      VARCHAR(20),
    brand2      VARCHAR(20),
    year        INT,
    custom1     INT,
    custom2     INT,
    custom3     INT,
    custom4     INT
);
INSERT INTO brands VALUES ('apple', 'samsung', 2020, 1, 2, 1, 2);
INSERT INTO brands VALUES ('samsung', 'apple', 2020, 1, 2, 1, 2);
INSERT INTO brands VALUES ('apple', 'samsung', 2021, 1, 2, 5, 3);
INSERT INTO brands VALUES ('samsung', 'apple', 2021, 5, 3, 1, 2);
INSERT INTO brands VALUES ('google', NULL, 2020, 5, 9, NULL, NULL);
INSERT INTO brands VALUES ('oneplus', 'nothing', 2020, 5, 9, 6, 3);

SELECT * FROM brands;


Input

brand1	brand2	year	custom1	custom2	custom3	custom4
apple	samsung	2020	1		2		1		2
samsung	apple	2020	1		2		1		2
apple	samsung	2021	1		2		5		3
samsung	apple	2021	5		3		1		2
google	NULL	2020	5		9		NULL	NULL
oneplus	nothing	2020	5		9		6		3


Output

brand1	brand2	year	custom1	custom2	custom3	custom4
google	NULL	2020	5		9		NULL	NULL
oneplus	nothing	2020	5		9		6		3
apple	samsung	2020	1		2		1		2
apple	samsung	2021	1		2		5		3
samsung	apple	2021	5		3		1		2


--- VIDEO_Q1 ---

-- Solution 
WITH cte AS (
SELECT
	*,
	CASE WHEN brand1 > brand2 THEN CONCAT(brand1, brand2, year) 
	ELSE CONCAT(brand2, brand1, year)
	END AS pair_id
FROM brands
), cte_rn AS (
SELECT
	*,
	ROW_NUMBER() OVER(PARTITION BY pair_id ORDER BY pair_id) AS rn
FROM cte
)
SELECT 
	brand1, brand2, year, custom1, custom2, custom3, custom4
FROM cte_rn
WHERE rn=1 OR (custom1 != custom3 OR custom2 !=custom4)



-- Solution 2

WITH cte AS (
SELECT
	b1.*
FROM brands b1
INNER JOIN brands b2
ON b1.brand1 = b2.brand2 AND b1.brand2=b2.brand1 AND b1.year = b2.year
)
SELECT DISTINCT
	CASE WHEN brand1 > brand2 THEN brand1 ELSE brand2 END AS brand1,
	CASE WHEN brand1 > brand2 THEN brand2 ELSE brand1 END AS brand2,
	year, custom1, custom2, custom3, custom4
FROM cte
WHERE custom1 = custom3 AND custom2 = custom4
UNION
SELECT DISTINCT
	CASE WHEN brand1 > brand2 THEN brand1 ELSE brand2 END AS brand1,
	CASE WHEN brand1 > brand2 THEN brand2 ELSE brand1 END AS brand2,
	year, custom1, custom2, custom3, custom4
FROM cte
WHERE custom1 != custom3 OR custom2 != custom4
UNION
SELECT * FROM brands c WHERE c.brand1 NOT IN (SELECT brand1 FROM cte)
