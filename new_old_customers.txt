--AB

Input 

order_id	customer_id	order_date	order_amount
1		100		2022-01-01	2000
2		200		2022-01-01	2500
3		300		2022-01-01	2100
4		100		2022-01-02	2000
5		400		2022-01-02	2200
6		500		2022-01-02	2700
7		100		2022-01-03	3000
8		400		2022-01-03	1000
9		600		2022-01-03	3000

Output
order_date	new_customer	old_customer
2022-01-01	3		0
2022-01-02	2		1
2022-01-03	1		2


create table customer_orders (
order_id integer,
customer_id integer,
order_date date,
order_amount integer
);

insert into customer_orders values
(1,100,cast('2022-01-01' as date),2000),
(2,200,cast('2022-01-01' as date),2500),
(3,300,cast('2022-01-01' as date),2100),
(4,100,cast('2022-01-02' as date),2000),
(5,400,cast('2022-01-02' as date),2200),
(6,500,cast('2022-01-02' as date),2700),
(7,100,cast('2022-01-03' as date),3000),
(8,400,cast('2022-01-03' as date),1000),
(9,600,cast('2022-01-03' as date),3000)
;

Solution

WITH first_visits AS (
select 
	customer_id,order_date,
	MIN(order_date) OVER(PARTITION BY customer_id ORDER BY order_date) AS first_visit_date
from customer_orders
)
SELECT
	order_date,
	SUM(CASE WHEN order_date = first_visit_date THEN 1 ELSE 0 END) AS new_customer,
	SUM(CASE WHEN order_date != first_visit_date THEN 1 ELSE 0 END) AS old_customer
FROM first_visits
GROUP BY order_date
;